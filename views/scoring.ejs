<!DOCTYPE html>
<html>
<head>
    <% include partials/home/header %>
    <title>User/visitor profiles and scoring</title>
    <link href="/codemirror/codemirror.css" rel="stylesheet">
    <link href="/codemirror/theme/blackboard.css" rel="stylesheet">
</head>

<body class="landing-page">
<% include partials/home/navbarSub %>

<section id="features" class="container services">
    <div class="row white-bg">
        <div class="col-sm-12">
            <br><br><h1>Realtime User Profiling and Scoring</h1><hr>
            <h2>REST API</h2>
            <br>The Gator.IO user profiling and scoring API provides the ability to get real-time intel on your users from any platform you are using.  It uses a standard REST interface that returns
            a JSON object with the profile data.  It can be integrated into any major platform.
            <br><br><br><div style="margin:auto;height:250px;background: url(/images/landing/rest.png) no-repeat"></div>
            <br><br>This information provided by the API includes:
            <br><br>
            <table class="table table-hover">
                <thead>
                    <tr><th><b>Data</b></th><th><b>Use</b></th></tr>
                </thead>
                <tr><td>Fraud score</td><td>Know whether the user is real or a bot.  <a href="/how">Here is our detection methodology</a>.</td></tr>
                <tr><td>Device data</td><td>Instantly know what kind of device type the user in on (desktop/mobile/tablet, etc.).  Over 22,000 specific devices are detected.</td></tr>
                <tr><td>Geolocation and demographics</td><td>Know median household income, home values, and age and gender breakdowns on the location of the user.</td></tr>
                <tr><td>Organization</td><td>See what organization a user is originating from, whether it's an ISP, corporation, university or government agency.</td></tr>
                <tr><td>Technology</td><td>Get detailed browser and platform (with versions) data on your users.</td></tr>
                <tr><td>Search info</td><td>Over 200 search engines are detected.  See if your user was referred by a search engine and with what keywords (if they are provided).</td></tr>
            </table>

            <br>
            <div class="row white-bg">
                <div class="col-sm-5">
                    <h1>Integrate in Minutes</h1>
                    <br>For help on how to implement the API, see our <a href="/developer/scoring">profile and scoring documentation</a>.
                    <br><br>The API is easily integrated into your systems.  To the right are some examples.  More extensive examples are at our
                    <a href="/developer/scoring">profile and scoring documentation</a> help section.
                    <br><br>
                    Developers, <a target="api" href="/developer/rest/scoring">try it out with our API tester</a>:

                    <br><br>To use the production version, <a href="<%- application.branding.signupUrl %>">signup</a> for an account and get an access token with query rights.
                    <br><br>After signing up, for help on how to get an access token, see our <a href="/developer/accesstokens">access token documentation</a>.
                </div>
                <div class="col-sm-7">

                    <div class="tabs-container">
                        <ul class="nav nav-tabs">
                            <li class="active"><a data-toggle="tab" href="#tab-node">Node.js</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-curl">CURL</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-https">HTTPS</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-dotnet">.NET</a></li>
                        </ul>
                        <div class="tab-content">
                            <div id="tab-node" class="tab-pane active">
                                <div class="panel-body">
                                    <textarea id="node">
var gator = require('gator-score');

var options = {
    ip: '72.211.250.156',
    ua: 'Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko)'
};

gator.score(options, function(err, result) {
    if (result && result.score < 100)
        console.log('Invalid user');
});

                                    </textarea>
                                </div>
                            </div>
                            <div id="tab-curl" class="tab-pane">
                                <div class="panel-body">
                                    <textarea id="curl">
curl -X GET --header 'Accept: application/json' 'https://api.gator.io/v1/score?ip=72.211.250.156&ua=Mozilla%2F5.0%20(Windows%20NT%206.1%3B%20WOW64)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F42.0.2311.135%20Safari%2F537.36'
                                    </textarea>
                                </div>
                            </div>
                            <div id="tab-https" class="tab-pane">
                                <div class="panel-body">
                                    <textarea id="https">
https://api.gator.io/v1/score?ip=72.211.250.156&ua=Mozilla%2F5.0%20(Windows%20NT%206.1%3B%20WOW64)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F42.0.2311.135%20Safari%2F537.36
                                    </textarea>
                                </div>
                            </div>
                            <div id="tab-dotnet" class="tab-pane">
                                <div class="panel-body">
                                    <textarea id="dotnet">
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Web;
using System.Net;
using System.IO;

namespace ConsoleApplication1
{
    public class Class1
    {

        //  The Gator.IO user scoring/profiling endpoint.
        public const string API_URL = "https://api.gator.io/v1/score";

        static void Main(string[] args)
        {
            Class1.CreateObject();
        }

        private static void CreateObject()
        {
            //  To use the API in production, create an account and get an access token from the gator.io website.  Then assign it to the accessToken variable below.  Calls
            //  without an access token will be rate limited.
            string accessToken = "";  //  change this to an access token for production use

            //  set up the parameters for the API call
            string ip = "72.203.234.33";    //  The I.P. address of the user

            //  the user agent of the user, if known
            string ua = "Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405";

            //  the url of the request to your platform
            string url = "http://www.mysite.com?utm_campaign=BingAds";

            //  the referrer of the request to your platform - this could be in the HTTP_REFERER header of the request
            string referrer = "http://bing.com/search?q=car";

            //  encode the request parameters
            string query = API_URL
                + "?accessToken=" + accessToken
                + "&ip=" + ip
                + "&ua=" + HttpUtility.UrlEncode(ua)
                + "&url=" + HttpUtility.UrlEncode(url)
                + "&referrer=" + HttpUtility.UrlEncode(referrer);

            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(query);
            request.Method = "GET";

            try
            {
                WebResponse webResponse = request.GetResponse();
                using (Stream webStream = webResponse.GetResponseStream())
                {
                    if (webStream != null)
                    {
                        using (StreamReader responseReader = new StreamReader(webStream))
                        {
                            string response = responseReader.ReadToEnd();
                            Console.Out.WriteLine(response);
                        }
                    }
                }
            }
            catch (Exception e)
            {
                Console.Out.WriteLine(e.Message);
            }
        }
    }
}</textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <br>
            <h1>Analytics</h1>
            <br>
            Get full analytics on your users.  The API aggregates data on quality scores, geolocation, demographics, search, device types, devices, campaigns, publishers and much more.  Full reporting is
            available on your users:
            <div class="row white-bg">
                <div class="col-sm-6">
                </div>
                <div class="col-sm-6">
                </div>
            </div>

            <br><h1>Sample Use Cases</h1>
            <table class="table table-hover">
                <thead>
                <tr><th><b>Use</b></th><th><b>Reason</b></th></tr>
                </thead>
                <tr><td>Ads</td><td>Do not display ads to invalid users. Keep your reputation as a publisher intact.</td></tr>
                <tr><td>Content Optimization</td><td>Tailor your content based on a user's geo, demo or device type.</td></tr>
                <tr><td>Offers</td><td>Base offers on location, search terms, or user's demographic.</td></tr>
                <tr><td>Publisher Networks</td><td>See which publishers have the best and worst traffic.</td></tr>
                <tr><td>Save bandwidth</td><td>Why stream videos to bots?</td></tr>
            </table>

            <br><h3>High Volume</h3>

            The API supports high-volume usage.

            <br><br><h3>Colocation</h3>
            We support the colocation of our API in order to provide the fastest possible lookups.  Contact us for more information.

            <br><br><br>
            <a class="btn btn-primary btn-xs" href="<%- application.branding.signupUrl %>">Signup - Free Trial</a>
        </div>
    </div>
</section>
<script src="/codemirror/codemirror.js"></script>
<script src="/codemirror/mode/javascript/javascript.js"></script>
<script src="/codemirror/mode/http/http.js"></script>
<script src="/codemirror/mode/shell/shell.js"></script>
<script src="/codemirror/mode/clike/clike.js"></script>

<% include partials/home/contactFooter %>
<% include partials/home/footerScripts %>
<script>
    var tabs = {};

    $(document).ready(function() {

        tabs['#tab-node'] = CodeMirror.fromTextArea(document.getElementById("node"), {
            mode:  "javascript",
            theme: "blackboard",
            lineNumbers: true,
            matchBrackets: true,
            styleActiveLine: true
        });

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            var target = $(e.target).attr("href")

            if (tabs[target])
                return;

            var mode = 'shell';

            if (target.indexOf('node') > -1)
                mode = 'javascript';

            if (target.indexOf('dotnet') > -1)
                mode = 'clike';

            tabs[target] = CodeMirror.fromTextArea(document.getElementById(target.substr(5)), {
                mode:  mode,
                theme: "blackboard",
                lineNumbers: true,
                matchBrackets: true,
                styleActiveLine: true
            });
        });
    });
</script>
</body>
</html>
